<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	<!-- Enable Spring Annotation Configuration -->
	<tx:annotation-driven />
	<context:annotation-config />
	<!-- Scan for all of Spring components such as Spring Service -->
	<context:component-scan base-package="org.qltv.spring.service"></context:component-scan>
	<!-- <context:component-scan base-package="com.journaldev.hibernate.data"></context:component-scan> -->
	<!-- <context:component-scan base-package="org.nhom8.csdl"></context:component-scan> -->
	<!-- <context:component-scan base-package="org.nhom8.dttn"></context:component-scan> -->
	<!-- Create Data Source bean -->

	<!-- <bean id="dataSource" -->
	<!-- class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
	<!-- HSQL -->
	<!-- <property name="driverClassName"> -->
	<!-- <value>org.hsqldb.jdbcDriver</value> -->
	<!-- </property> -->
	<!-- <property name="url"> -->
	<!-- <value>jdbc:hsqldb:mem:mydatabase</value> -->
	<!-- </property> -->
	<!-- <property name="username"> -->
	<!-- <value>sa</value> -->
	<!-- </property> -->
	<!-- <property name="password"> -->
	<!-- <value></value> -->
	<!-- </property> -->
	<!-- </bean> -->
	<bean id="bookService" class="org.nhom8.csdl.BookDaoImpl" />
	<bean id="dailyService" class="org.nhom8.csdl.DailyPaperDaoImpl" />
	<bean id="paperService" class="org.nhom8.csdl.NewsPaperDaoImpl" />
	<bean id="readerService" class="org.nhom8.csdl.ReaderDaoImpl" />
	
	<bean id="reserveService" class="org.nhom8.csdl.ReserveDaoImpl" />

	<!-- <bean id="employeeService" class=" com.journaldev.spring.service.EmployeeService" 
		/> -->

	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" -->
	<!-- destroy-method="close"> -->

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- mysql -->
		<!-- <property name="driverClassName" value="com.mysql.jdbc.Driver" /> -->
		<!-- <property name="url" value="jdbc:mysql://localhost:3306/test" /> -->
		<!-- <property name="username" value="root" /> -->
		<!-- <property name="password" value="123456" /> -->



		<!-- <bean id="dataSource" -->
		<!-- class="org.springframework.jdbc.datasource.DriverManagerDataSource"> -->
		<!-- <property name="driverClassName"> -->
		<!-- <value>org.hsqldb.jdbcDriver</value> -->
		<!-- </property> -->
		<!-- <property name="url"> -->
		<!-- <value>jdbc:hsqldb:mem:mydatabase</value> -->
		<!-- </property> -->
		<!-- <property name="username"> -->
		<!-- <value>sa</value> -->
		<!-- </property> -->
		<!-- <property name="password"> -->
		<!-- <value></value> -->
		<!-- </property> -->

		<!-- sqlite -->
		<property name="driverClassName">
			<value>org.sqlite.JDBC</value>
		</property>
		<property name="url">
			<value>jdbc:sqlite:test.db</value>
		</property>
		<property name="username">
			<value></value>
		</property>
		<property name="password">
			<value></value>
		</property>

	</bean>


	<!-- Define SessionFactory bean -->
	<!-- <bean id="sessionFactory" -->
	<!-- class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"> -->
	<!-- <property name="dataSource" ref="dataSource" /> -->
	<!-- <property name="mappingResources"> -->
	<!-- <list> -->
	<!-- <value>domain-classes.hbm.xml</value> -->
	<!-- </list> -->
	<!-- </property> -->
	<!-- <property name="configLocation"> -->
	<!-- <value>classpath:hibernate.cfg.xml</value> -->
	<!-- </property> -->
	<!-- </bean> -->

	<!-- <bean id="sessionFactory" -->
	<!-- class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"> -->
	<!-- <property name="dataSource" ref="dataSource" /> -->
	<!-- <property name="annotatedClasses" ref="hibernateClasses" /> -->
	<!-- <property name="hibernateProperties"> -->
	<!-- <props> -->
	<!-- <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop> -->
	<!-- <prop key="hibernate.show_sql">true</prop> -->
	<!-- <prop key="hibernate.format_sql">true</prop> -->
	<!-- <prop key="hibernate.hbm2ddl.auto">update</prop> -->

	<!-- </props> -->
	<!-- </property> -->
	<!-- </bean> -->


	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="jpaData" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
		</property>
		<property name="jpaProperties">
			<props>
				<!-- <prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop> -->
				<!-- <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop> -->
				<prop key="hibernate.dialect">org.hibernate.dialect.SQLiteDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property>

	</bean>

	<!-- Transaction Manager -->
	<!-- <bean id="transactionManager" -->
	<!-- class="org.springframework.orm.hibernate5.HibernateTransactionManager"> -->
	<!-- <property name="sessionFactory" ref="sessionFactory" /> -->
	<!-- </bean> -->

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	<!-- Detect @Transactional Annotation -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- <tx:annotation-driven transaction-manager="transactionManager2" /> -->
</beans>